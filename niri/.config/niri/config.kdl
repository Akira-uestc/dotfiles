input {
    keyboard {
        xkb {
        }

        numlock
    }

    touchpad {
        // off
        tap
        // dwt
        // dwtp
        // drag false
        // drag-lock
        natural-scroll
        // accel-speed 0.2
        // accel-profile "flat"
        // scroll-method "two-finger"
        // disabled-on-external-mouse
    }

    mouse {
        // off
        // natural-scroll
        // accel-speed 0.2
        // accel-profile "flat"
        // scroll-method "no-scroll"
    }

    trackpoint {
        // off
        // natural-scroll
        // accel-speed 0.2
        // accel-profile "flat"
        // scroll-method "on-button-down"
        // scroll-button 273
        // middle-emulation
    }

    // warp-mouse-to-focus
    // focus-follows-mouse max-scroll-amount="0%"
}

output "eDP-1" {
    mode "1920x1080@60"
    scale 1
    transform "normal"
    position x=0 y=0
}
output "HDMI-A-1" {
    off
    mode "1920x1080@60"
    scale 1
    transform "normal"
    position x=1920 y=0
}

layout {
    // Set gaps around windows in logical pixels.
    gaps 6

    center-focused-column "never"

    // You can customize the widths that "switch-preset-column-width" (Mod+R) toggles between.
    preset-column-widths {
        // Proportion sets the width as a fraction of the output width, taking gaps into account.
        // For example, you can perfectly fit four windows sized "proportion 0.25" on an output.
        // The default preset widths are 1/3, 1/2 and 2/3 of the output.
        proportion 0.33333
        proportion 0.5
        proportion 0.66667

        // Fixed sets the width in logical pixels exactly.
        // fixed 1920
    }

    // You can also customize the heights that "switch-preset-window-height" (Mod+Shift+R) toggles between.
    // preset-window-heights { }

    // You can change the default width of the new windows.
    default-column-width { proportion 0.5; }
    // If you leave the brackets empty, the windows themselves will decide their initial width.
    // default-column-width {}

    // By default focus ring and border are rendered as a solid background rectangle
    // behind windows. That is, they will show up through semitransparent windows.
    // This is because windows using client-side decorations can have an arbitrary shape.
    //
    // If you don't like that, you should uncomment `prefer-no-csd` below.
    // Niri will draw focus ring and border *around* windows that agree to omit their
    // client-side decorations.
    //
    // Alternatively, you can override it with a window rule called
    // `draw-border-with-background`.

    // You can change how the focus ring looks.
    focus-ring {
        // Uncomment this line to disable the focus ring.
        // off

        // How many logical pixels the ring extends out from the windows.
        width 2

        // Colors can be set in a variety of ways:
        // - CSS named colors: "red"
        // - RGB hex: "#rgb", "#rgba", "#rrggbb", "#rrggbbaa"
        // - CSS-like notation: "rgb(255, 127, 0)", rgba(), hsl() and a few others.

        // Color of the ring on the active monitor.
        active-color "#7fc8ff"

        // Color of the ring on inactive monitors.
        inactive-color "#505050"

        // You can also use gradients. They take precedence over solid colors.
        // Gradients are rendered the same as CSS linear-gradient(angle, from, to).
        // The angle is the same as in linear-gradient, and is optional,
        // defaulting to 180 (top-to-bottom gradient).
        // You can use any CSS linear-gradient tool on the web to set these up.
        // Changing the color space is also supported, check the wiki for more info.
        //
        // active-gradient from="#80c8ff" to="#bbddff" angle=45

        // You can also color the gradient relative to the entire view
        // of the workspace, rather than relative to just the window itself.
        // To do that, set relative-to="workspace-view".
        //
        // inactive-gradient from="#505050" to="#808080" angle=45 relative-to="workspace-view"
    }

    // You can also add a border. It's similar to the focus ring, but always visible.
    border {
        // The settings are the same as for the focus ring.
        // If you enable the border, you probably want to disable the focus ring.
        off

        width 4
        active-color "#ffc87f"
        inactive-color "#505050"

        // Color of the border around windows that request your attention.
        urgent-color "#9b0000"

        // active-gradient from="#ffbb66" to="#ffc880" angle=45 relative-to="workspace-view"
        // inactive-gradient from="#505050" to="#808080" angle=45 relative-to="workspace-view"
    }

    // You can enable drop shadows for windows.
    shadow {
        // Uncomment the next line to enable shadows.
        // on

        // draw-behind-window true

        // You can change how shadows look. The values below are in logical
        // pixels and match the CSS box-shadow properties.

        // Softness controls the shadow blur radius.
        softness 30

        // Spread expands the shadow.
        spread 5

        // Offset moves the shadow relative to the window.
        offset x=0 y=5

        // You can also change the shadow color and opacity.
        color "#0007"
    }

    struts {
        // left 64
        // right 64
        // top 64
        // bottom 64
    }
}

animations {
}

screenshot-path "~/Pictures/Screenshots/%y-%m-%d_%H-%M-%S.png"

hotkey-overlay {
    skip-at-startup
}
environment {
    DISPLAY ":1"
    QT_QPA_PLATFORMTHEME "qt6ct"
    XDG_MENU_PREFIX "arch-"
    XDG_SESSION_TYPE "wayland"
    XDG_SESSION_DESKTOP "niri"
}

spawn-at-startup "waybar" "-c" "/home/akira/.config/waybar/config.niri" "-s" "/home/akira/.config/waybar/style.css"
spawn-at-startup "sh" "-c" "wallpaper < ~/.config/niri/scripts/wallpaper.txt"
spawn-at-startup "xwayland-satellite"
spawn-at-startup "mako"
spawn-at-startup "kwalletd6"
spawn-at-startup "fcitx5" "-d" "-r"
spawn-at-startup "nm-applet"
spawn-at-startup "/usr/lib/polkit-kde-authentication-agent-1"
spawn-at-startup "wl-paste" "--type" "text" "--watch" "cliphist" "store"
spawn-at-startup "wl-paste" "--type" "image" "--watch" "cliphist" "store"
spawn-at-startup "~/.local/scripts/qq.sh"
spawn-at-startup "gsettings set org.gnome.desktop.interface gtk-theme 'Breeze'"
spawn-at-startup "gsettings set org.gnome.desktop.interface icon-theme 'Tela-purple-light'"

spawn-at-startup "/home/akira/.config/niri/scripts/fcitx5-fix.sh"
binds {
    Mod+Shift+Slash { show-hotkey-overlay; }

    Mod+C { close-window; }
    Mod+M { quit; }
    Mod+O repeat=false { toggle-overview; }
    Mod+Shift+P { power-off-monitors; }
    Mod+Escape allow-inhibiting=false { toggle-keyboard-shortcuts-inhibit; }

    Mod+V       { toggle-window-floating; }
    Mod+F { maximize-column; }
    Mod+Ctrl+V { switch-focus-between-floating-and-tiling; }
    Mod+Shift+R { switch-preset-window-height; }
    Mod+Ctrl+R { reset-window-height; }
    Mod+Shift+F { fullscreen-window; }
    Mod+Ctrl+F { expand-column-to-available-width; }
    Mod+Alt+R { switch-preset-column-width; }
    Mod+Alt+C { center-visible-columns; }
    Mod+Ctrl+C {center-column; }

    // Screenshots
    Print { screenshot; }
    Mod+Print { screenshot-screen; }
    Alt+Print { screenshot-window; }

    // apps
    Mod+Q hotkey-overlay-title="Open a Terminal: kitty" { spawn "kitty"; }
    Mod+E { spawn "dolphin"; }
    Mod+R { spawn "rofi" "-show" "drun" "-show-icons" "-normal-window"; }
    Mod+Shift+V { spawn "sh" "-c" "cliphist list | rofi -dmenu -normal-window | cliphist decode | wl-copy"; }
    Alt+L { spawn "brightnessctl" "set" "0"; }
    Alt+W { spawn "brightnessctl" "set" "100%"; }
    Mod+P { spawn "sh" "-c" "notify-send $(hyprpicker)"; }
    Ctrl+Alt+L hotkey-overlay-title="LogOut Options: wlogout" { spawn "wlogout"; }
    Ctrl+Shift+L hotkey-overlay-title="Lock Screen: swaylock" { spawn "~/.config/wlogout/lock.sh"; }
    Ctrl+Alt+W { spawn "~/.config/niri/scripts/toogle-waybar.sh"; }
    Alt+R { spawn "~/.local/scripts/window-switcher.sh"; }
    F1 { spawn "curl" "127.0.0.1:60828/selection_translate";}
    F2 { spawn "~/.local/scripts/translate/ocr_translate.sh"; }

    // window focus
    Mod+Left  { focus-column-left; }
    Mod+Down  { focus-window-down; }
    Mod+Up    { focus-window-up; }
    Mod+Right { focus-column-right; }
    Mod+H     { focus-column-left; }
    Mod+J     { focus-window-down; }
    Mod+K     { focus-window-up; }
    Mod+L     { focus-column-right; }
    Mod+Home { focus-column-first; }
    Mod+End  { focus-column-last; }
    Mod+WheelScrollRight      { focus-column-right; }
    Mod+WheelScrollLeft       { focus-column-left; }

    // window movement
    Mod+Shift+Left  { move-column-left; }
    Mod+Shift+Down  { move-window-down; }
    Mod+Shift+Up    { move-window-up; }
    Mod+Shift+Right { move-column-right; }
    Mod+Shift+H     { move-column-left; }
    Mod+Shift+J     { move-window-down; }
    Mod+Shift+K     { move-window-up; }
    Mod+Shift+L     { move-column-right; }
    Mod+Ctrl+Home { move-column-to-first; }
    Mod+Ctrl+End  { move-column-to-last; }
    Mod+Ctrl+WheelScrollRight { move-column-right; }
    Mod+Ctrl+WheelScrollLeft  { move-column-left; }
    Mod+Shift+WheelScrollDown      { move-column-right; }
    Mod+Shift+WheelScrollUp        { move-column-left; }

    // monitor focus
    Mod+Ctrl+Left  { focus-monitor-left; }
    Mod+Ctrl+Down  { focus-monitor-down; }
    Mod+Ctrl+Up    { focus-monitor-up; }
    Mod+Ctrl+Right { focus-monitor-right; }
    Mod+Ctrl+H     { focus-monitor-left; }
    Mod+Ctrl+J     { focus-monitor-down; }
    Mod+Ctrl+K     { focus-monitor-up; }
    Mod+Ctrl+L     { focus-monitor-right; }

    // monitor movement
    Mod+Shift+Ctrl+Left  { move-column-to-monitor-left; }
    Mod+Shift+Ctrl+Down  { move-column-to-monitor-down; }
    Mod+Shift+Ctrl+Up    { move-column-to-monitor-up; }
    Mod+Shift+Ctrl+Right { move-column-to-monitor-right; }
    Mod+Shift+Ctrl+H     { move-column-to-monitor-left; }
    Mod+Shift+Ctrl+J     { move-column-to-monitor-down; }
    Mod+Shift+Ctrl+K     { move-column-to-monitor-up; }
    Mod+Shift+Ctrl+L     { move-column-to-monitor-right; }

    // workspaces focus
    Mod+Page_Down      { focus-workspace-down; }
    Mod+Page_Up        { focus-workspace-up; }
    Mod+U              { focus-workspace-down; }
    Mod+I              { focus-workspace-up; }
    Mod+WheelScrollDown      cooldown-ms=150 { focus-workspace-down; }
    Mod+WheelScrollUp        cooldown-ms=150 { focus-workspace-up; }
    Mod+1 { focus-workspace 1; }
    Mod+2 { focus-workspace 2; }
    Mod+3 { focus-workspace 3; }
    Mod+4 { focus-workspace 4; }
    Mod+5 { focus-workspace 5; }
    Mod+6 { focus-workspace 6; }
    Mod+7 { focus-workspace 7; }
    Mod+8 { focus-workspace 8; }
    Mod+9 { focus-workspace 9; }

    // workspaces movement
    Mod+Ctrl+Page_Down { move-column-to-workspace-down; }
    Mod+Ctrl+Page_Up   { move-column-to-workspace-up; }
    Mod+Ctrl+U         { move-column-to-workspace-down; }
    Mod+Ctrl+I         { move-column-to-workspace-up; }
    Mod+Ctrl+WheelScrollDown cooldown-ms=150 { move-column-to-workspace-down; }
    Mod+Ctrl+WheelScrollUp   cooldown-ms=150 { move-column-to-workspace-up; }
    Mod+Shift+Page_Down { move-workspace-down; }
    Mod+Shift+Page_Up   { move-workspace-up; }
    Mod+Shift+U         { move-workspace-down; }
    Mod+Shift+I         { move-workspace-up; }
    Mod+Shift+1 { move-column-to-workspace 1; }
    Mod+Shift+2 { move-column-to-workspace 2; }
    Mod+Shift+3 { move-column-to-workspace 3; }
    Mod+Shift+4 { move-column-to-workspace 4; }
    Mod+Shift+5 { move-column-to-workspace 5; }
    Mod+Shift+6 { move-column-to-workspace 6; }
    Mod+Shift+7 { move-column-to-workspace 7; }
    Mod+Shift+8 { move-column-to-workspace 8; }
    Mod+Shift+9 { move-column-to-workspace 9; }

    // resize
    Mod+Minus { set-column-width "-10%"; }
    Mod+Equal { set-column-width "+10%"; }
    Mod+Shift+Minus { set-window-height "-10%"; }
    Mod+Shift+Equal { set-window-height "+10%"; }

    Mod+BracketLeft  { consume-or-expel-window-left; }
    Mod+BracketRight { consume-or-expel-window-right; }
    Mod+Comma  { consume-window-into-column; }
    Mod+Period { expel-window-from-column; }

    Mod+W { toggle-column-tabbed-display; }


    XF86AudioRaiseVolume allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.1+"; }
    XF86AudioLowerVolume allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.1-"; }
    XF86AudioMute        allow-when-locked=true { spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SINK@" "toggle"; }
    XF86AudioMicMute     allow-when-locked=true { spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SOURCE@" "toggle"; }
    XF86MonBrightnessDown { spawn "brightnessctl" "set" "5%-"; }
    XF86MonBrightnessUp { spawn "brightnessctl" "set" "5%+"; }
}
window-rule {
    match app-id="Rofi"
    open-floating true
    draw-border-with-background false
    focus-ring {
        off
    }
}

window-rule {
    match app-id="firefox"
    open-maximized true
    shadow {
        off
    }
    border {
        off
    }
    clip-to-geometry true
    tiled-state true
    draw-border-with-background true
}

window-rule {
    match app-id="Notification.py"
    open-floating true
    default-column-width { fixed 960; }
    default-window-height { fixed 540; }
}

window-rule {
    match app-id="blueberry.py"
    open-floating true
    default-column-width { fixed 960; }
    default-window-height { fixed 540; }
}

window-rule {
    match app-id="light.py"
    open-floating true
    default-column-width { fixed 500; }
    default-window-height { fixed 150; }
}

window-rule {
    match app-id="volume.py"
    open-floating true
    default-column-width { fixed 500; }
    default-window-height { fixed 150; }
}

window-rule {
    match app-id="org.gnome.Calendar"
    open-floating true
    default-column-width { fixed 1200; }
    default-window-height { fixed 700; }
}

window-rule {
    match app-id="org.kde.dolphin"
    open-floating true
    default-column-width { fixed 1200; }
    default-window-height { fixed 750; }
}

window-rule {
    match app-id="org.freedesktop.impl.portal.desktop.kde"
    open-floating true
    default-column-width { fixed 950; }
    default-window-height { fixed 580; }
    default-floating-position x=485 y=250 relative-to="top-left"
}

window-rule {
    match app-id="pot"
    open-floating true
}

window-rule {
    match app-id="Typora" title="License Info"
    open-floating true
    default-column-width { fixed 0; }
    default-window-height { fixed 0; }
}

window-rule {
    match app-id="chromium"
    focus-ring {
        off
    }
    shadow {
        off
    }
    border {
        off
    }
    clip-to-geometry true
    tiled-state true
    draw-border-with-background true
    geometry-corner-radius 0
}

prefer-no-csd

window-rule {
    geometry-corner-radius 6
    clip-to-geometry true
}
